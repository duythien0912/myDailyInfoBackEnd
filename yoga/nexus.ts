/**
 * This file was automatically generated by Nexus 0.9.11
 * Do not make changes to this file directly
 */

import * as ctx from "../src/context"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Data: { // root type
    buyerAvatar: string; // String!
    buyerId: number; // Int!
    buyerName: string; // String!
    countryCode: string; // String!
    createTime: number; // Int!
    currencySymbol: string; // String!
    goodsId: string; // String!
    goodsLink: string; // String!
    goodsOrderTime: number; // Int!
    goodsPicUrl: string; // String!
    goodsPrice: string; // String!
    goodsTitle: string; // String!
    id: string; // String!
    orderState: string; // String!
    statePicUrl: string; // String!
    status: number; // Int!
    timeName: string; // String!
    updateTime: number; // Int!
    userLevel: number; // Int!
    userLevelType: string; // String!
    userName: string; // String!
  }
  Query: {};
  SupperBuy: { // root type
    data: NexusGenRootTypes['Data'][]; // [Data!]!
    msg: string; // String!
    serverTime: number; // Int!
    state: number; // Int!
  }
  User: { // root type
    id: string; // ID!
    name: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  Data: { // field return type
    buyerAvatar: string; // String!
    buyerId: number; // Int!
    buyerName: string; // String!
    countryCode: string; // String!
    createTime: number; // Int!
    currencySymbol: string; // String!
    goodsId: string; // String!
    goodsLink: string; // String!
    goodsOrderTime: number; // Int!
    goodsPicUrl: string; // String!
    goodsPrice: string; // String!
    goodsTitle: string; // String!
    id: string; // String!
    orderState: string; // String!
    statePicUrl: string; // String!
    status: number; // Int!
    timeName: string; // String!
    updateTime: number; // Int!
    userLevel: number; // Int!
    userLevelType: string; // String!
    userName: string; // String!
  }
  Query: { // field return type
    hello: string; // String!
    superbuy: NexusGenRootTypes['SupperBuy']; // SupperBuy!
    trend: string; // String!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  SupperBuy: { // field return type
    data: NexusGenRootTypes['Data'][]; // [Data!]!
    msg: string; // String!
    serverTime: number; // Int!
    state: number; // Int!
  }
  User: { // field return type
    id: string; // ID!
    name: string; // String!
  }
}

export interface NexusGenArgTypes {
  Query: {
    hello: { // args
      name?: string | null; // String
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Data" | "Query" | "SupperBuy" | "User";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}